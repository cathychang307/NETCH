<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <http pattern="/img/**" security="none" />
    <http pattern="/**/images/**" security="none" />
    <http pattern="/jquery/**" security="none" />
    <http pattern="/**/**.css" security="none" />
    <http pattern="/**/**.js" security="none" />
    <http pattern="/i18njs" security="none" />
    <http pattern="/captcha.png*" security="none" />
    <http pattern="/app/error/message*" security="none" />
    <http pattern="/page/login*" security="none" />
    <http auto-config="false" access-decision-manager-ref="accessDecisionManager" entry-point-ref="botAuthenticationEntryPoint" use-expressions="false" disable-url-rewriting="false">
        <headers disabled="true" />
        <csrf disabled="true" />
        <access-denied-handler error-page="/page/login?error" />
        <intercept-url pattern="/page/home/*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/page/index" access="IS_AUTHENTICATED_FULLY" />
        <intercept-url pattern="/page/common/*" access="IS_AUTHENTICATED_FULLY" />
        <!-- cap-auth-admin start -->
        <intercept-url pattern="/page/**" access="${systemType}" />
        <!-- cap-auth-admin end -->
        <intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
        <anonymous enabled="false" />
        <!-- cap-auth-admin start -->
        <form-login always-use-default-target="true" login-page="/page/login" default-target-url="/page/index" authentication-failure-handler-ref="ajaxAuthenticationFailureHandler"
            username-parameter="j_username" password-parameter="j_password" login-processing-url="/j_spring_security_check" />
        <!-- cap-auth-admin end -->
        <session-management>
            <concurrency-control max-sessions="1" expired-url="/page/login?error" session-registry-alias="sessionRegistry" /> <!-- exception-if-maximum-exceeded="true" -->
        </session-management>
        <logout logout-url="/j_spring_security_logout" logout-success-url="/page/login" />
        <custom-filter ref="botAuthenticationProcessingFilter" before="FORM_LOGIN_FILTER" />
    </http>
    
    
    
    <beans:bean id="botAuthenticationProcessingFilter" class="com.bot.cqs.sso.webapp.BotSSOAuthenticationProcessingFilter">
		<beans:property name="filterProcessesUrl" value="/api/ssoverify" />
		<beans:property name="usernameParameter" value="j_username" />
		<beans:property name="passwordParameter" value="j_password" />
		<beans:property name="authenticationDetailsSource" ref="botWebAuthenticationDetailsSource" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="authenticationFailureHandler" ref="failureHandler" />
		<beans:property name="authenticationSuccessHandler" ref="successHandler" />
		<beans:property name="sessionAuthenticationStrategy" ref="sas" />
	</beans:bean>
	<beans:bean id="botWebAuthenticationDetailsSource" class="com.bot.cqs.sso.security.web.BotWebAuthenticationDetailsSource"></beans:bean>
    <beans:bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/page/index" />
		<beans:property name="alwaysUseDefaultTargetUrl" value="true" />
	</beans:bean>
	<beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/page/login" />
	</beans:bean>
	<beans:bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="maximumSessions" value="1" />
	</beans:bean>
    
    
    
    <!-- cap-auth-admin start -->
    <beans:bean id="botUserAuthenticationProvider" class="com.bot.cqs.security.provider.BotUserAuthenticationProvider">
		<beans:property name="forcePrincipalAsString" value="false" />
		<beans:property name="userDetailsService" ref="userDetailsService" />
	</beans:bean>
	<beans:bean id="userDetailsService" class="com.bot.cqs.sso.service.BotSSOUserService">
		<beans:property name="getRoleBySSO" value="true" />
	</beans:bean>
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="botUserAuthenticationProvider" />
    </authentication-manager>
    <!-- cap-auth-admin end -->
    
    
    
    <beans:bean id="botAuthenticationEntryPoint" class="com.bot.cqs.sso.webapp.BotAuthenticationEntryPoint">
    	<beans:constructor-arg index="0" value="/page/login"/>
<!-- 		<beans:property name="loginFormUrl" value="/page/login" /> -->
<!-- 		<beans:property name="forceHttps" value="false" /> -->
	</beans:bean>
	
	
    
    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:constructor-arg name="decisionVoters">
            <beans:list>
                <!-- cap-auth-admin start -->
                <beans:bean class="com.iisigroup.cap.auth.vote.CapPermissionVoter">
                    <beans:property name="rolePrefix" value="${systemType}" />
                    <beans:property name="stripQueryStringFromUrls" value="true" />
                </beans:bean>
                <!-- cap-auth-admin end -->
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
            </beans:list>
        </beans:constructor-arg>
        <beans:property name="allowIfAllAbstainDecisions" value="false" />
    </beans:bean>
    
    
    
    <beans:bean id="loggerListener" class="org.springframework.security.access.event.LoggerListener" />
    
    
    
    <!-- Security context -->
    <beans:bean id="capSecurityContext" class="com.iisigroup.cap.security.CapSecurityContext" scope="session" />
</beans:beans>