<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>netch</artifactId>
        <groupId>tw.com.bot.cqs</groupId>
        <version>1.0.0</version>
    </parent>
    <artifactId>netch-web</artifactId>
    <packaging>war</packaging>
    <properties>
        <ap.copy.dir>D/IISI</ap.copy.dir>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
		<dependency>
			<groupId>tw.com.bot.cqs</groupId>
			<artifactId>netch-config</artifactId>
			<!-- 包版時不包進 war 中 使用 build plugin copy 進classes -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>tw.com.bot.cqs</groupId>
			<artifactId>netch-auth-admin</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.tuckey</groupId>
            <artifactId>urlrewritefilter</artifactId>
            <version>4.0.3</version>
        </dependency>
        <!-- provided：在編譯和測試的過程有效,在最後生成war時不加入 runtime：在運行的時候依賴,在編譯的時候不依賴 -->
        <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
            <version>0.9.5.2</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>3.2.2</version>
            <scope>runtime</scope>
        </dependency>
        <!-- sql server ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>sqljdbc</artifactId>
        </dependency>
    </dependencies>
    <build>
        <finalName>etch</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-Xmx1024m</argLine>
                </configuration>
            </plugin>
            <!-- 將config copy 至 classes -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <packagingExcludes>
                        robots.txt,
                        WEB-INF/classes/gateway/binding.xml,
                        WEB-INF/classes/spring/security2.xml,
                        WEB-INF/classes/HOST_IP/**,
                        WEB-INF/classes/XSD/**,
                        WEB-INF/jetty*.xml,
                        static/build.js,
                        static/main.js,
                        static/js/common/**,
                        static/debug/**,
                        static/lib/**
                    </packagingExcludes>
                    <webResources>
                        <resource>
                            <directory>${basedir}/../netch-config/src/main/resources</directory>
                            <targetPath>WEB-INF/classes</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <configuration>
                    <webAppConfig>
                        <extraClasspath>target/etch/WEB-INF/classes</extraClasspath>
                    </webAppConfig>
                    <contextPath>/etch</contextPath>
                    <stopKey>foo</stopKey>
                    <stopPort>8080</stopPort>
                    <!-- <systemProperties>
                        <systemProperty>
                            <name>cola.cas.host</name>
                            <value>https://citi/citi-cas</value>
                        </systemProperty>
                        <systemProperty>
                            <name>cola.ap.host</name>
                            <value>http://localhost:8080</value>
                        </systemProperty>
                    </systemProperties> -->
                </configuration>
                <executions>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-xsd-resources</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/${ap.copy.dir}/XSD</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../netch-config/src/main/resources/XSD</directory>
                                    <includes>
                                        <include>*.*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-hostIp-resources</id>
                        <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/${ap.copy.dir}/HOST_IP</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../netch-config/src/main/resources/HOST_IP</directory>
                                    <includes>
                                        <include>*.*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>optimize</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.bringking</groupId>
                        <artifactId>requirejs-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>optimize</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- optional path to a nodejs executable -->
                            <!-- <nodeExecutable> C:/Program Files/nodejs/node </nodeExecutable> -->
                            <!-- path to optimizer json config file -->
                            <configFile> ${basedir}/src/main/webapp/static/build.js
                            </configFile>
                            <!-- optional path to optimizer executable -->
                            <optimizerFile> ${basedir}/src/main/webapp/static/requirejs/2.3.2/r.js
                            </optimizerFile>
                            <!-- optional parameters to optimizer executable -->
                            <optimizerParameters>
                                <parameter>optimize=uglify</parameter>
                                <parameter>name=main</parameter>
                                <parameter>baseUrl=${basedir}/src/main/webapp/static</parameter>
                                <parameter>out=${basedir}/src/main/webapp/static/main.min.js</parameter>
                            </optimizerParameters>
                            <!-- Whether or not to process configFile with maven filters. If you use this option, some options in your configFile must resolve to absolute paths (see below) -->
                            <filterConfig> false
                            </filterConfig>
                            <!-- Skip requirejs optimization if true -->
                            <skip> false
                            </skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>css</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jasig.maven</groupId>
                        <artifactId>sass-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
									<goal>update-stylesheets</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <sassOptions>
                                <always_update>true</always_update>
                                <style>:compressed</style>
                                <debug_info>false</debug_info>
                            </sassOptions>
                            <resources>
                                <resource>
                                    <source>
                                        <directory>${basedir}/src/WebDev/netch-web/sass</directory>
                                        <includes>
                                            <include>*.scss</include>
                                        </includes>
                                        <excludes />
                                    </source>
                                    <destination>${basedir}/src/main/webapp/static/css</destination>
                                </resource>
                            </resources>
                            <useCompass>false</useCompass>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>